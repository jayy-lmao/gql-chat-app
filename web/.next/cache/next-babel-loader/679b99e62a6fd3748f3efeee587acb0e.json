{"ast":null,"code":"var _jsxFileName = \"/usr/src/web/pages/communities.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nconst GET_COMMUNITIES = gql`\n  query {\n  communities{\n    name\n    id\n    owner{\n    username\n      id\n    }\n  }\n}\n`;\nexport default function Communities() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_COMMUNITIES);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, data.communities.map(community => __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, community.name), \" - \", community.description)));\n}","map":{"version":3,"sources":["/usr/src/web/pages/communities.tsx"],"names":["gql","useQuery","GET_COMMUNITIES","Communities","loading","error","data","message","communities","map","community","name","description"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,MAAMC,eAAe,GAAGF,GAAI;;;;;;;;;;;CAA5B;AAaA,eAAe,SAASG,WAAT,GAAuB;AACpC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,eAAD,CAAzC;AACA,MAAIE,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,UAASA,KAAK,CAACE,OAAQ,EAA/B;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACE,WAAL,CAAiBC,GAAjB,CAAqBC,SAAS,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,SAAS,CAACC,IAAd,CADiC,SACND,SAAS,CAACE,WADJ,CAAlC,CADH,CADF;AAOD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_COMMUNITIES = gql`\n  query {\n  communities{\n    name\n    id\n    owner{\n    username\n      id\n    }\n  }\n}\n`\n\nexport default function Communities() {\n  const { loading, error, data } = useQuery(GET_COMMUNITIES);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div>\n      {data.communities.map(community => <div>\n        <b>{community.name}</b> - {community.description}\n      </div>)}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}