{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/usr/src/web/pages/communities.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n  communities{\\n    name\\n    id\\n    owner{\\n    username\\n      id\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nvar GET_COMMUNITIES = gql(_templateObject());\nexport default function Communities() {\n  var _useQuery = useQuery(GET_COMMUNITIES),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return 'Loading...';\n  if (error) return \"Error! \".concat(error.message);\n  console.log(data.communities);\n  return __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, data.communities.map(function (community) {\n    return __jsx(\"li\", {\n      key: community.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, __jsx(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, community.name), \" - \", community.description);\n  }));\n}","map":{"version":3,"sources":["/usr/src/web/pages/communities.tsx"],"names":["gql","useQuery","GET_COMMUNITIES","Communities","loading","error","data","message","console","log","communities","map","community","id","name","description"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,IAAMC,eAAe,GAAGF,GAAH,mBAArB;AAaA,eAAe,SAASG,WAAT,GAAuB;AAAA,kBACHF,QAAQ,CAACC,eAAD,CADL;AAAA,MAC5BE,OAD4B,aAC5BA,OAD4B;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,IADY,aACZA,IADY;;AAEpC,MAAIF,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,wBAAiBA,KAAK,CAACE,OAAvB;AACXC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,WAAjB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,IAAI,CAACI,WAAL,CAAiBC,GAAjB,CAAqB,UAAAC,SAAS;AAAA,WAAI;AAAI,MAAA,GAAG,EAAEA,SAAS,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,SAAS,CAACE,IAAd,CADiC,SACNF,SAAS,CAACG,WADJ,CAAJ;AAAA,GAA9B,CADH,CADF;AAOD","sourcesContent":["import gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\n\nconst GET_COMMUNITIES = gql`\n  query {\n  communities{\n    name\n    id\n    owner{\n    username\n      id\n    }\n  }\n}\n`\n\nexport default function Communities() {\n  const { loading, error, data } = useQuery(GET_COMMUNITIES);\n  if (loading) return 'Loading...';\n  if (error) return `Error! ${error.message}`;\n  console.log(data.communities)\n\n  return (\n    <ul>\n      {data.communities.map(community => <li key={community.id}>\n        <b>{community.name}</b> - {community.description}\n      </li>)}\n    </ul>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}